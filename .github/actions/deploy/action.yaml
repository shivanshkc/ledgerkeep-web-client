name: Deploy
description: Deploys the project.

inputs:
  service-account-email:
    description: |
      Email of the service account that manages the involved cloud operations.
      Required to explicitly set the service account for the Cloud Run service.
    required: true
  service-account-key:
    description: |
      JSON formatted key for the service account.
      This can be obtained from the GCP console IAM page.
    required: true

  project-id:
    description: |
      Project ID under which the deployment is intended to happen.
    required: true
  region:
    description: |
      Region for the deployment.
    required: true
  repository:
    description: |
      Name of the repository (GCP Artifacts Registry) where the docker image is present.
    required: true
  service:
    description: |
      Name of the service that will be displayed in Cloud Run.
    required: true

runs:
  using: composite
  steps:
    # Authenticating with Google Cloud.
    - name: Authenticating with Google Cloud.
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.service-account-key }}

    # Setting up Google Cloud CLI.
    - name: Setting up Google Cloud CLI.
      uses: google-github-actions/setup-gcloud@v0

    # Google Cloud CLI info.
    - name: Google Cloud CLI info.
      run: gcloud info
      shell: bash

    # Configuring docker with credentials.
    - name: Configuring docker with credentials.
      run: gcloud auth configure-docker ${{ inputs.region }}-docker.pkg.dev
      shell: bash

    # Building the docker image.
    - name: Building the docker image.
      run: docker build -t ${{ inputs.service }}:latest .
      shell: bash

    # Pushing the docker image.
    - name: Pushing the docker image.
      run: |
        docker tag ${{ inputs.service }}:latest \
          ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project-id }}/${{ inputs.repository }}/${{ inputs.service }}:latest

        docker push \
          ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project-id }}/${{ inputs.repository }}/${{ inputs.service }}:latest
      shell: bash

    # Deploying to cloud run with all the custom, cost-effective options.
    - name: Deploying to cloud run.
      run: |
        gcloud run deploy ${{ inputs.service }} \
          --concurrency=80 \
          --max-instances=1 \
          --min-instances=1 \
          --memory=128Mi \
          --platform=managed \
          --port=8080 \
          --service-account=${{ inputs.service-account-email }} \
          --timeout=600 \
          --set-secrets=/project/dist/assets/conf.json=ledgerkeep-web-client-configs:latest \
          --image=${{ inputs.region }}-docker.pkg.dev/${{ inputs.project-id }}/${{ inputs.repository }}/${{ inputs.service }}:latest \
          --cpu-throttling \
          --region=${{ inputs.region }}
      shell: bash

    # Allowing public access. Remove this step if public access is not intended.
    - name: Allowing public access.
      run: |
        gcloud run services add-iam-policy-binding ${{ inputs.service }} \
          --region=${{ inputs.region }} \
          --member=allUsers \
          --role=roles/run.invoker
      shell: bash
